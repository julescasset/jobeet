<?php

namespace Proxies\__CG__\Ens\ManonBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Job extends \Ens\ManonBundle\Entity\Job implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'id', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'type', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'company', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'logo', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'url', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'position', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'location', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'description', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'how_to_apply', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'token', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'is_public', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'is_activated', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'email', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'expires_at', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'created_at', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'updated_at', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'category', 'file'];
        }

        return ['__isInitialized__', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'id', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'type', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'company', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'logo', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'url', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'position', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'location', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'description', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'how_to_apply', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'token', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'is_public', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'is_activated', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'email', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'expires_at', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'created_at', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'updated_at', '' . "\0" . 'Ens\\ManonBundle\\Entity\\Job' . "\0" . 'category', 'file'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Job $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany($company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo($logo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', [$location]);

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', []);

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setHowToApply($howToApply)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHowToApply', [$howToApply]);

        return parent::setHowToApply($howToApply);
    }

    /**
     * {@inheritDoc}
     */
    public function getHowToApply()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHowToApply', []);

        return parent::getHowToApply();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublic($isPublic)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublic', [$isPublic]);

        return parent::setIsPublic($isPublic);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublic', []);

        return parent::getIsPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActivated($isActivated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActivated', [$isActivated]);

        return parent::setIsActivated($isActivated);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActivated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActivated', []);

        return parent::getIsActivated();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiresAt($expiresAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiresAt', [$expiresAt]);

        return parent::setExpiresAt($expiresAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiresAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiresAt', []);

        return parent::getExpiresAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\Ens\ManonBundle\Entity\Category $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAtValue', []);

        return parent::setCreatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAtValue', []);

        return parent::setUpdatedAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanySlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanySlug', []);

        return parent::getCompanySlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getPositionSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPositionSlug', []);

        return parent::getPositionSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocationSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocationSlug', []);

        return parent::getLocationSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiresAtValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiresAtValue', []);

        return parent::setExpiresAtValue();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', []);

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsolutePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsolutePath', []);

        return parent::getAbsolutePath();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', []);

        return parent::preUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', []);

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', []);

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function setTokenValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTokenValue', []);

        return parent::setTokenValue();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpired', []);

        return parent::isExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function expiresSoon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'expiresSoon', []);

        return parent::expiresSoon();
    }

    /**
     * {@inheritDoc}
     */
    public function getDaysBeforeExpires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDaysBeforeExpires', []);

        return parent::getDaysBeforeExpires();
    }

    /**
     * {@inheritDoc}
     */
    public function publish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'publish', []);

        return parent::publish();
    }

    /**
     * {@inheritDoc}
     */
    public function extend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extend', []);

        return parent::extend();
    }

}
